resetToPowerHolders.t.sol
├─ Dave calls `propose` with `resetToPowerHolders` as calldata (test_resetToPowerHolders_totalSupplyZero)
│  ├─ Given Dave doesn't hold any Zero Tokens and the `pastTotalSupply` of Zero Tokens is 0
│  ├─ Then the state of the proposal upon creation is `Active`
│  ├─ When the voting period ends and no Zero Tokens have been minted
│  └─ Then the state of the proposal is `Expired`
├─ Dave calls `propose` with `resetToPowerHolders` as calldata (test_resetToPowerHolders_proposalActiveExpired)
│  ├─ Given no one votes on the proposal
│  ├─ Then the state of the proposal upon creation is `Active`
│  ├─ When the voting period ends and the threshold ratio hasn't been met
│  └─ Then the state of the proposal is `Expired`
├─ Eve calls `propose` with `resetToPowerHolders` as calldata (test_resetToPowerHolders_proposalActiveDefeated)
│  ├─ Given Eve holds a minority of Zero Tokens
│  ├─ Then the state of the proposal upon creation is `Active`
│  ├─ When Eve is the only one to vote on the proposal with her minority voting power
│  └─ Then the state of the proposal at the end of the voting period is `Defeated`
└─ Dave calls `propose` with `resetToPowerHolders` as calldata (test_resetToPowerHolders_proposalActiveSucceeded)
   ├─ Given Dave holds 60,000,000 Zero Tokens and currently has the highest voting power
   ├─ Then the state of the proposal upon creation is `Active`
   ├─ When Dave votes on the proposal with his majority voting power
   ├─ Then the state of the proposal is `Succeeded`
   ├─ When Dave executes the proposal
   ├─ Then a new Power Token is deployed
   ├─ Then a new Standard Governor is deployed
   ├─ Then a new Emergency Governor is deployed
   ├─ Then the Power Token balance of Alice is 550,000,000
   ├─ Then the Power Token balance of Bob is 250,000,000
   ├─ Then the Power Token balance of Carol is 200,000,000
   ├─ Then the Power Token balance of Dave is 0
   ├─ Then the Power Token balance of Eve is 0
   └─ Then the Power Token balance of Frank is 0
